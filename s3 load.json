{"data":{"edges":[],"nodes":[{"data":{"type":"PDFUploaderComponent","node":{"template":{"_type":"Component","path":{"trace_as_metadata":true,"file_path":"973106fd-11db-432d-917c-05b2b943b26f/Honeywell Astra POC.pdf","fileTypes":["pdf"],"list":false,"required":true,"placeholder":"","show":true,"value":"Honeywell Astra POC.pdf","name":"path","display_name":"PDF Path","advanced":false,"dynamic":false,"info":"Supported file types: pdf","title_case":false,"type":"file","_input_type":"FileInput","load_from_db":false},"access_key":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"","name":"access_key","display_name":"Access Key","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Enter your AWS Access Key","title_case":false,"type":"str","_input_type":"MessageTextInput"},"bucket":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":true,"placeholder":"","show":true,"value":"jauneettestload","name":"bucket","display_name":"Bucket Name","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Enter bucket name","title_case":false,"type":"str","_input_type":"MessageTextInput"},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from pathlib import Path\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, SecretStrInput, FileInput, Output\nfrom langflow.schema import Data\nimport boto3\nimport os\nfrom PyPDF2 import PdfReader\n\nclass PDFUploaderComponent(Component):\n    display_name = \"PDF to S3 Uploader and Text Extractor\"\n    description = \"Uploads a PDF to an S3 bucket, extracts the text from the PDF, and returns the text along with the S3 URL.\"\n    icon = \"file-upload\"\n    name = \"PDFUploaderComponent\"\n    \n    PDF_FILE_TYPES = [\"pdf\"]\n\n    inputs = [\n        MessageTextInput(name=\"access_key\", display_name=\"Access Key\", info=\"Enter your AWS Access Key\", required=False),\n        SecretStrInput(name=\"secret_key\", display_name=\"Secret Key\", info=\"Enter your AWS Secret Key\", required=False),\n        MessageTextInput(name=\"region_name\", display_name=\"AWS Region\", info=\"Enter AWS region\", required=True),\n        MessageTextInput(name=\"bucket\", display_name=\"Bucket Name\", info=\"Enter bucket name\", required=True),\n        MessageTextInput(name=\"credentials_profile_name\", display_name=\"Credentials Profile Name\", info=\"Enter your AWS credentials profile name\", required=False),\n        FileInput(\n            name=\"path\",\n            display_name=\"PDF Path\",\n            file_types=PDF_FILE_TYPES,\n            info=f\"Supported file types: {', '.join(PDF_FILE_TYPES)}\",\n            required=True\n        )\n    ]\n\n    outputs = [\n        Output(display_name=\"Data\", name=\"data\", method=\"load_file\"),\n    ]\n\n    def load_file(self) -> Data:\n        if not self.path:\n            raise ValueError(\"Please, upload a PDF file to use this component.\")\n        \n        # Resolve the file path\n        resolved_path = self.resolve_path(self.path)\n\n        extension = Path(resolved_path).suffix[1:].lower()\n\n        if extension not in self.PDF_FILE_TYPES:\n            raise ValueError(f\"Unsupported file type: {extension}\")\n        \n        # Create the S3 client\n        s3_client = self.get_s3_client()\n\n        try:\n            # Upload PDF to S3\n            s3_url, pdf_name = self.upload_pdf_to_s3(s3_client, resolved_path)\n            \n            # Extract text from the PDF\n            pdf_text = self.extract_pdf_text(resolved_path)\n            \n            # Return the extracted text and S3 URL as a Data object\n            data = Data(\n                data={\n                    \"pdf_text\": pdf_text,\n                    \"s3_url\": s3_url\n                },\n                status=\"success\"\n            )\n            self.status = data\n            return data\n\n        except Exception as e:\n            error_message = f\"Error processing PDF: {e}\"\n            print(error_message)\n            return Data(\n                data={\n                    \"error\": error_message\n                },\n                status=\"error\"\n            )\n\n    def get_s3_client(self):\n        \"\"\"\n        Create and return an S3 client using either:\n        1. Access and Secret Key (if provided),\n        2. Credentials profile name (if provided),\n        or raise an error if neither is provided.\n        \"\"\"\n        if self.access_key and self.secret_key:\n            # Use access_key and secret_key if provided\n            s3_client = boto3.client(\n                's3',\n                aws_access_key_id=self.access_key,\n                aws_secret_access_key=self.secret_key,\n                region_name=self.region_name\n            )\n        elif self.credentials_profile_name:\n            # Use AWS credentials profile if provided\n            session = boto3.Session(profile_name=self.credentials_profile_name)\n            s3_client = session.client('s3', region_name=self.region_name)\n        else:\n            raise ValueError(\"Either AWS access/secret keys or a credentials profile name must be provided.\")\n        \n        return s3_client\n\n    def upload_pdf_to_s3(self, s3_client, pdf_path):\n        # Get the file name from the path\n        pdf_name = os.path.basename(pdf_path)\n        s3_key = f\"{pdf_name}\"\n\n        # Upload the PDF file to S3\n        s3_client.upload_file(pdf_path, self.bucket, s3_key)\n\n        # Construct the S3 URL\n        s3_url = f\"https://{self.bucket}.s3.amazonaws.com/{s3_key}\"\n        return s3_url, pdf_name\n\n    def extract_pdf_text(self, pdf_path):\n        \"\"\"\n        Extracts text from the given PDF file using PyPDF2.\n        \"\"\"\n        reader = PdfReader(pdf_path)\n        text = \"\"\n        for page in reader.pages:\n            extracted_text = page.extract_text()\n            if extracted_text:\n                text += extracted_text\n        \n        return text if text else \"No text found in the PDF.\"","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","load_from_db":false,"title_case":false},"credentials_profile_name":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":false,"placeholder":"","show":true,"value":"357576205424_FIELDOPS_FOPS-DEL","name":"credentials_profile_name","display_name":"Credentials Profile Name","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Enter your AWS credentials profile name","title_case":false,"type":"str","_input_type":"MessageTextInput"},"region_name":{"trace_as_input":true,"trace_as_metadata":true,"load_from_db":false,"list":false,"required":true,"placeholder":"","show":true,"value":"us-east-1","name":"region_name","display_name":"AWS Region","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Enter AWS region","title_case":false,"type":"str","_input_type":"MessageTextInput"},"secret_key":{"load_from_db":false,"required":false,"placeholder":"","show":true,"value":"NwtcrF2g1uIuQXC0z8AoOUdPpjNGL1jZ+FDL6Oa3","name":"secret_key","display_name":"Secret Key","advanced":false,"input_types":["Message"],"dynamic":false,"info":"Enter your AWS Secret Key","title_case":false,"password":true,"type":"str","_input_type":"SecretStrInput"}},"description":"Uploads a PDF to an S3 bucket, extracts the text from the PDF, and returns the text along with the S3 URL.","icon":"file-upload","base_classes":["Data"],"display_name":"s3 load","documentation":"","custom_fields":{},"output_types":[],"pinned":false,"conditional_paths":[],"frozen":false,"outputs":[{"types":["Data"],"selected":"Data","name":"data","display_name":"Data","method":"load_file","value":"__UNDEFINED__","cache":true}],"field_order":["access_key","secret_key","region_name","bucket","credentials_profile_name","path"],"beta":false,"edited":true,"lf_version":"1.0.14.post1","official":false},"id":"CustomComponent-CMM3k"},"id":"CustomComponent-CMM3k","position":{"x":0,"y":0},"type":"genericNode"}],"viewport":{"x":1,"y":1,"zoom":1}},"description":"Uploads a PDF to an S3 bucket, extracts the text from the PDF, and returns the text along with the S3 URL.","name":"s3 load","id":"CustomComponent-CMM3k","is_component":true,"last_tested_version":"1.0.14.post1"}